source('C:/Users/John/code/math-comp/labs/Assignment5MccraryJ.R')
source('C:/Users/John/code/math-comp/labs/Assignment5MccraryJ.R')
source('~/.active-rstudio-document')
#input
pi <- 0
#computation
for (i in 1:n) {
pi <- 4*pi + ((-1)^(i+1))/(2*i - 1)
}
source('~/.active-rstudio-document')
if (sum(c(ones, tens, huns, thou, ttho)) %% 3 != 0) {
cat(sprintf("The number %05d is not divisible by 3", n_copy))
} else {
cat(sprintf("The number %05d is divisible by 3", n_copy))
}
source('~/.active-rstudio-document')
# five digit number gets a 5D vector
digits <- remainders <- c(0, 0, 0, 0, 0)
for(i in 1:5) {
print(1*10^i)
}
for(i in 0:4) {
print(1*10^i)
}
source('~/.active-rstudio-document')
rm(list=ls())
n<-21548
n_copy <- n
# five digit number gets a 5D vector
digits <- remainders <- c(0, 0, 0, 0, 0)
for(i in 1:5) {
remainders[i]<-n %/% (1*10^(i-1))
n <- n %% (1*10^(i-1))
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
debugSource('C:/Users/John/code/math-comp/temp_lab4.R')
21548 %% 1
21548 %% 10
21548 %% 100
21548 %% 10
source('C:/Users/John/code/math-comp/temp_lab4.R')
source('C:/Users/John/code/math-comp/temp_lab4.R')
source('C:/Users/John/code/math-comp/temp_lab4.R')
#Question 3
#Purpose: divisibility test for 3
rm(list=ls())
#input
ones <- 0
tens <- 0
huns <- 0
thou <- 0
ttho <- 0
n <- as.numeric(readline("Enter a positive five digit number: "))
n_copy <- n
#computation
ones <- n %/% 1
#computation
ones <- n %/% 10
n <- n %% 10
tens <- n %/% 10
n <- n %% 10
huns <- n %/% 10
n <- n %% 10
thou <- n %/% 10
n <- n %% 10
ttho <- n %/% 10
n <- n %% 10
n<-21234
#computation
ones <- n %% 10
n <- n %/% 10
tens <- n %/% 10
n<-21234
#computation
ones <- n %% 10
n <- n %/% 10
n<-21234
#computation
ones <- n %% 10
#input
ones <- 0
tens <- 0
huns <- 0
thou <- 0
ttho <- 0
n_copy <- n
n<-21234
#computation
ones <- n %% 10
n <- n %/% 10
tens <- n %% 10
n <- n %/% 10
huns <- n %% 10
n <- n %/% 10
thou <- n %% 10
n <- n %/% 10
ttho <- n %% 10
n <- n %/% 10
#output
if (sum(c(ones, tens, huns, thou, ttho)) %% 3 != 0) {
cat(sprintf("The number %05d is not divisible by 3", n_copy))
} else {
cat(sprintf("The number %05d is divisible by 3", n_copy))
}
source('C:/Users/John/code/math-comp/temp_lab4.R')
source('C:/Users/John/code/math-comp/temp_lab4.R')
source('C:/Users/John/code/math-comp/temp_lab4.R')
source('C:/Users/John/code/math-comp/temp_lab4.R')
source('C:/Users/John/code/math-comp/temp_lab4.R')
debugSource('C:/Users/John/code/math-comp/temp_lab4.R')
source('C:/Users/John/code/math-comp/temp_lab4.R')
rm(ls())
rm(list=ls())
600*.34*(1-.34)
sqrt(.34*(1-.34)/600)
(.34*(1-.34)/600)
%
source('~/.active-rstudio-document')
f(3)
f(5)
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
i <- n %%  10
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/show_code.R')
(7-1)/3
(7-1)/2
2^(2*9 + 1)
2^(2*6 + 1)
2^(2+ 6 + 1)
2^(2 * 6 + 1)
# Taylor series for sin(x)
rm(list = ls())
x <- .5 * 3.1419
sin.x <- 0
for (k in 0:10) {
sin.x <- sin.x + ((-1)^k / factorial(2*k + 1)) * x^(2*k + 1)
}
sin.x
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
source('C:/Users/John/code/math-comp/review-for-test.R')
debugSource('C:/Users/John/code/math-comp/review-for-test.R')
n
n
x
q
rm(list=ls())
source('C:/Users/John/code/math-comp/Test1MccraryJ.R')
88/4
48/4
source('C:/Users/John/code/math-comp/Test1MccraryJ.R')
digits[:2]
digits[,2]
digits[2]
digits[1:2]
source('C:/Users/John/code/math-comp/Test1MccraryJ.R')
10248/4
source('C:/Users/John/code/math-comp/Test1MccraryJ.R')
source('C:/Users/John/code/math-comp/Test1MccraryJ.R')
source('C:/Users/John/code/math-comp/Test1MccraryJ.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(list=ls())
rm(list=ls())
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(list=ls())
#purpose: tax-brackets
#input
income <- as.numeric(readline("Enter your taxable income: "))
rates <- c(.1, .15, .25, .28, .33, .35, .396)
brackets <- c(9224, 37449, 90749, 189299, 411499, 413199, 413200)
rates.length <- length(rates)
source('C:/Users/John/code/math-comp/tax_brackets.R')
taxes.total <- sum(taxes)
source('C:/Users/John/code/math-comp/tax_brackets.R')
taxes[1]
taxes[4]
sum(taxes)
debugSource('C:/Users/John/code/math-comp/tax_brackets.R')
#bracket <- c(0.0, 9225.0, 37450.0, 90750.0, 189300.0, 411500.0, 413200.0)
bracket <- c(9225, 37450-9225, 90750-37450, 189300-90750, 411500-189300, 413200-41500)
debugSource('C:/Users/John/code/math-comp/tax_brackets.R')
source('C:/Users/John/code/math-comp/tax_brackets.R')
bracket
debugSource('C:/Users/John/code/math-comp/tax_brackets.R')
taxes
n
taxes
debugSource('C:/Users/John/code/math-comp/tax_brackets.R')
source('C:/Users/John/code/math-comp/tax_brackets.R')
rm(list=ls())
1 - pnorm(2, 0.7)
1 - pnorm(2.6, 2, 0.7)
?qnorm
#2
qnorm(.96, 41, 7)
#3
qnorm(1-0.08, 0, 1)
#4
pnorm(2.03)
#5
qnorm(0.79)
library(UsingR)
install.packages("UsingR")
?sd
#6
library(UsingR)
y<-fat$wrist
1 - pnorm(y, mean(y), sd(y))
?IQR
E(y)
fivenum(y)
?fivenum
fivenum(y)
prop.table(y)
mean(y)
1 - pnorm(20, mean(y), sd(y))
#7
LIF <- 15.8
UIF <- 20.6
y[ y < LIF | y > UIF ]
fivenum(y)
?fivenum
mean(y)
install.packages("car")
#8
plot(y)
#8
qqPlot(y)
#8
library(car)
qqPlot(y)
?qqPlot
var(y)
min(y)
max(y)
sd(y)
debugSource('C:/Users/John/code/math-comp/MccraryJ_Test1.R')
rm(list=ls())
debugSource('C:/Users/John/code/math-comp/MccraryJ_Test1.R')
MyFactorial <- function (n) {
if (n == 1 || n == 0) {
return(1)
} else {
return(n * MyFactorial(n-1))
}
}
MyFactorial(5)
fact.recursive <- function (n) {
if (n == 1 || n == 0) {
return(1)
} else {
return(n * MyFactorial(n-1))
}
}
MyFactorial <- function(n) {
if (n == 0 || n == 1) {
return(1)
} else {
f <- 1
for (i in 1:n) {
f <- f*i
}
return(f)
}
}
MyFactorial(5)
fact.recursive(5)
fact.recursive <- function (n) {
if (n == 1 || n == 0) {
return(1)
} else {
return(n * fact.recursive(n-1))
}
}
fact.recursive(10)
MyExp <- function(x, n) {
s<-0
for (k in 0:n) {
s <- s + (x^k)/factorial(k)
}
}
source('C:/Users/John/code/math-comp/functions/cos_approx.R')
MyExp(1, 10)
MyExp <- function(x, n) {
s<-0
for (k in 0:n) {
s <- s + (x^k)/factorial(k)
}
return(s)
}
MyExp(1, 10)
sumfin <- function(n) {
s <- 0
for (i in 1:n) {
s <- s + ((2*i - 1) / (2*i + 1))
}
}
sumfin(10)
sumfin <- function(n) {
s <- 0
for (i in 1:n) {
s <- s + ((2*i - 1) / (2*i + 1))
}
return(s)
}
sumfin(10)
fibo <- function(n) {
f1 <- 1
f2 <- 1
if (n == 1) {
return(1)
} else if (n == 2) {
return(c(1,1))
} else {
f <- numeric(n)
f[1] <- f1
f[2] <- f2
for (i in 3:n) {
f[i] <- f[i-1] + f[i-2]
}
}
}
fibo(3)
return(f)
fibo <- function(n) {
f1 <- 1
f2 <- 1
if (n == 1) {
return(1)
} else if (n == 2) {
return(c(1,1))
} else {
f <- numeric(n)
f[1] <- f1
f[2] <- f2
for (i in 3:n) {
f[i] <- f[i-1] + f[i-2]
}
return(f)
}
}
fibo(3)
fibo(5)
fibo(10)
plot(fibo(10))
fibo(100)
fibo(20)
fibo(1)
fibo(2)
fibo(3)
fibo <- function(n) {
f1 <- 1
f2 <- 1
if (n == 1 | n == 2) {
return(1)
} else {
f <- numeric(n)
f[1] <- f1
f[2] <- f2
for (i in 3:n) {
f[i] <- f[i-1] + f[i-2]
}
return(f)
}
}
fibo(2)
fibo(1)
MyFibo <- function(n) {
f <- Fibo(n)
return(f[length(f)])
}
Fibo <- function(n) {
f1 <- 1
f2 <- 1
if (n == 1) {
return(c(1))
} else if (n == 2) {
return(c(1,1))
} else {
f <- numeric(n)
f[1] <- f1
f[2] <- f2
for (i in 3:n) {
f[i] <- f[i-1] + f[i-2]
}
return(f)
}
}
View(fibo)
rm(fibo)
MyFibo(4)
MyFibo <- function(n) {
if (n == 1) {
return(1)
} else if (n == 2) {
return(1)
} else {
f <- numeric(n)
f[1] <- 1
f[2] <- 1
for (i in 3:n) {
f[i] <- f[i-1] + f[i-2]
}
return(f[i])
}
}
MyFibo(3)
MyFibo(6)
MyFibo <- function(n) {
a <- 1
b <- 1
f <- 0
for(i in 1:n) {
f <- b + a
b <- a
a <- f
}
return(f)
}
MyFibo(2)
MyFibo(1)
MyFibo <- function(n) {
a <- 0
b <- 1
f <- 0
for(i in 1:n) {
f <- b + a
b <- a
a <- f
}
return(f)
}
MyFibo(2)
MyFibo(1)
MyFibo(3)
MyFibo(4)
MyFibo(10)
MyFibo(100)
MyFibo(15)
MyFibo(0)
MyFibo(-1)
MyFibo(-3)
MyFibo(-10)
MyFibo(10)
MyFibo <- function(n) {
f1 <- 0
f2 <- 1
f3 <- 0
if (n == 1 | n == 2 | n < 1) {
return(1)
} else {
for(i in 1:n) {
f3 <- f2 + f1
f1 <- f2
f2 <- f3
}
return(f3)
}
}
MyFibo(10)
MyFibo(3)
MyFibo(2)
MyFibo <- function(n) {
f1 <- 0
f2 <- 1
f3 <- 0
if (n == 1 | n == 2 | n < 1) {
return(1)
} else {
for(i in 1:n) {
f3 <- f2 + f1
f2 <- f1
f1 <- f3
}
return(f3)
}
}
MyFibo(2)
MyFibo(3)
MyFibo(4)
MyFibo(5)
MyFibo(6)
x <- 1:10
y <- MyFibo(x)
for (i in 1:10) {y[i] <- MyFibo(x[i])}
plot(x,y)
setwd("C:/Users/John/code/math-comp/functions")
rm(list=ls())
